Процедура СоздатьСообщение(Сообщение, ТекущийОтправительСтрокой, ТекущаяГруппаСтрокой) Экспорт
	Участники				= ГруппаСотрудникаПоСтроке(ТекущаяГруппаСтрокой);
	Если Участники = Неопределено Тогда Сообщить("Сообщение не отправлено, не найдена группа: " + ТекущаяГруппаСтрокой) КонецЕсли;

	нСообщение				= РегистрыСведений.ЧАТ.СоздатьМенеджерЗаписи();
	нСообщение.Публикатор	= СотрудникПоСтроке(ТекущийОтправительСтрокой);
	нСообщение.Участники	= Участники;
	ЗаполнитьЗначенияСвойств(нСообщение, Сообщение); 
	нСообщение.Записать();
КонецПроцедуры // СоздатьСообщение()

Функция ПолучитьМассивСообщений(ДатаНачала = Неопределено, ДатаОкончания = Неопределено, Участники, Сотрудник) Экспорт
	мСообщений			= Новый Массив;	
	ТекущийИсполнитель	= ПолучениеКонстантНаСервере.ТекущийИсполнитель();
	Запрос	= Новый Запрос("
	|ВЫБРАТЬ *
	|ИЗ 
	|(ВЫБРАТЬ ПЕРВЫЕ 100 
	|	Период						КАК Дата, 
	|	Представление(Сообщение)	КАК Сообщение, 
	|	ВЫБОР
	|		КОГДА Публикатор = &ТекущийИсполнитель
	|			ТОГДА """"
	|		ИНАЧЕ Публикатор.Наименование
	|	КОНЕЦ						КАК Отправитель
	|ИЗ 
	|	РегистрСведений.Чат
	|ГДЕ
	|	Период МЕЖДУ &ДатаН И &ДатаО
	|	И Участники = &Участники
	|УПОРЯДОЧИТЬ ПО
	|	Период УБЫВ) КАК ВТ
	|УПОРЯДОЧИТЬ ПО
	|	Дата ВОЗР");
	Запрос.УстановитьПараметр("ДатаН", ?(ДатаНачала=Неопределено, ДобавитьМесяц(ТекущаяДата(), -1), ДатаНачала));
	Запрос.УстановитьПараметр("ДатаО", ?(ДатаОкончания=Неопределено, ТекущаяДата(), ДатаОкончания));
	Запрос.УстановитьПараметр("Участники", Участники);
	Запрос.УстановитьПараметр("ТекущийИсполнитель", Сотрудник);
	
	Выборка	= Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока Выборка.Следующий() Цикл
		мСообщений.Добавить(Новый Структура("Дата,Сообщение,Отправитель", Выборка.Дата, Выборка.Сообщение, Выборка.Отправитель));		
	КонецЦикла; // Пока Выборка.Следующий()
	
	Возврат мСообщений;
КонецФункции

Функция ПолучитьМассивСообщенийJSON(ДатаНачала = Неопределено, ДатаОкончания = Неопределено, ТекущаяГруппаСтрокой, ТекущийОтправительСтрокой) Экспорт
	ТекущаяГруппа	= ГруппаСотрудникаПоСтроке(ТекущаяГруппаСтрокой);
	Если ТекущаяГруппа = Неопределено Тогда Сообщить("Сообщения не получены, не найдена группа: " + ТекущаяГруппаСтрокой); Возврат "" КонецЕсли;
	мСообщений		= ПолучитьМассивСообщений(ДатаНачала, ДатаОкончания, ГруппаСотрудникаПоСтроке(ТекущаяГруппаСтрокой), СотрудникПоСтроке(ТекущийОтправительСтрокой));	
    мСообщенийJSON	= СериализоватьJSON(мСообщений);        
    Возврат мСообщенийJSON;
КонецФункции // ПолучитьМассивСообщенийJSON()

Функция ПолучитьМассивГруппJSON() Экспорт
	тИсполнитель	= ПолучениеКонстантНаСервере.ТекущийИсполнитель();
	мГрупп			= МассивГруппСотрудника(тИсполнитель);
	мГруппJSON		= СериализоватьJSON(мГрупп);
    Возврат мГруппJSON;	
КонецФункции // ПолучитьМассивГруппJSON()

Функция СериализоватьJSON(Данные)	
    ЗаписьJSON												= Новый ЗаписьJSON; 
    ЗаписьJSON.УстановитьСтроку();
    НастройкиСериализации									= Новый НастройкиСериализацииJSON();
    НастройкиСериализации.СериализовыватьМассивыКакОбъекты	= Ложь;
	НастройкиСериализации.ФорматСериализацииДаты			= ФорматДатыJSON.ISO;
	НастройкиСериализации.ВариантЗаписиДаты					= ВариантЗаписиДатыJSON.УниверсальнаяДата;
    ЗаписатьJSON(ЗаписьJSON, Данные, НастройкиСериализации); 
    Возврат	ЗаписьJSON.Закрыть();	
КонецФункции // СериализоватьJSON()

Функция МассивГруппСотрудника(Сотрудник)
	Запрос	= Новый Запрос("
	|ВЫБРАТЬ
	|	Ссылка				КАК Группа,
	|	Ссылка.Наименование	КАК Наименование
	|ИЗ
	|	Справочник.ГруппыУчастников.Участники
	|ГДЕ
	|	Участник = &Сотрудник");
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	Выгрузка	= Запрос.Выполнить().Выгрузить();
	мГрупп		= Выгрузка.ВыгрузитьКолонку("Наименование");
	Возврат мГрупп;
КонецФункции // МассивГруппСотрудника()

Функция ГруппаСотрудникаПоСтроке(ГруппаСтрокой)
	Возврат Справочники.ГруппыУчастников.НайтиПоНаименованию(ГруппаСтрокой);
КонецФункции // ГруппаСотрудникаПоСтроке()

Функция СотрудникПоСтроке(ТекущийОтправительСтрокой)
	ТекущийИсполнитель	= ПолучениеКонстантНаСервере.ТекущийИсполнитель();
	Если Строка(ТекущийИсполнитель) = ТекущийОтправительСтрокой Тогда Возврат ТекущийИсполнитель КонецЕсли;
	Возврат ПолучениеКонстантНаСервере.НайтиСотрудникаПоНаименованию(ТекущийОтправительСтрокой);
КонецФункции // СотрудникПоСтроке()

Функция ПолучитьСписокОтправителей(ТекущаяГруппаСтрокой) Экспорт
	мОтправителей		= Новый Массив;
	ГруппаСотрудника	= ГруппаСотрудникаПоСтроке(ТекущаяГруппаСтрокой);
	ТекущийИсполнитель	= ПолучениеКонстантНаСервере.ТекущийИсполнитель();
	Если ТекущийИсполнитель.Отдел.Пустая() Тогда
		Запрос	= Новый Запрос("
		|ВЫБРАТЬ РАЗЛИЧНЫЕ Участник.Наименование КАК Отправитель	
		|ИЗ Справочник.ГруппыУчастников.Участники
		|ГДЕ Участник.Отдел <> Значение(Справочник.Отделы.ПустаяСсылка)
		|И Ссылка.Наименование = Участник.Отдел.Наименование
		|И Ссылка = &ГруппаСотрудника");
		Запрос.УстановитьПараметр("ГруппаСотрудника", ГруппаСотрудника);
		мОтправителей	= Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Отправитель");
	Иначе
		мОтправителей.Добавить(Строка(ТекущийИсполнитель));				
	КонецЕсли;
	Возврат СериализоватьJSON(мОтправителей);	
КонецФункции // ПолучитьСписокОтправителей() 